" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins

" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'


""" Common settings -------------------------
set scrolloff=5
set showmode
set number
set relativenumber
set ignorecase
set incsearch
set smartcase
set clipboard+=unnamed   """ system clipboard
set timeoutlen=800

""" Idea specific settings ------------------
set ideajoin
""" set ideastatusicon=gray
set idearefactormode=keep

""" Plugins  --------------------------------
set NERDTree
set ReplaceWithRegister
set argtextobj
set commentary
" set easymotion
set exchange
set matchit
set multiple-cursors
set surround
set textobj-entire
set textobj-indent

""" Plugin settings -------------------------
"""Plug 'jdhao/better-escape.vim'   """ no work
"""let g:better_escape_shortcut = ['jk', 'kj']
let g:argtextobj_pairs="[:],(:),<:>"

let g:NERDTreeMapActivateNode='l'
let g:NERDTreeMapJumpParent='h'

""" Map leader to space ---------------------
let mapleader=" "

" Don't use Ex mode, use Q for formatting.
map Q gq

""" core keymap
inoremap jk <Esc>
inoremap kj <Esc>
inoremap <C-j> <C-n>
inoremap <C-k> <C-p>

map <C-l> <C-w>l
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k

""" vim exchange keymap
nmap sx <Plug>(Exchange)
xmap X <Plug>(Exchange)
nmap sxc <Plug>(ExchangeClear)
nmap sxx <Plug>(ExchangeLine)

""" surround
nmap sa <Action>(SurroundWith)

nmap H <Action>(PreviousTab)
nmap L <Action>(NextTab)
map <leader>bd <Action>(CloseEditor)

""" Editing Keymap
map <C-s> <Action>(SaveAll)
map <M-j> <Action>(MoveLineDown)
map <M-k> <Action>(MoveLineUp)
map za <Action>(CollapseSelection)

""" AI
map <D-S-.> <Action>(ActivateCodeiumChatToolWindow)

""" Code Keymap
map <leader>cf <Action>(ReformatCode)
map <leader>co <Action>(OptimizeImports)
map <leader>cr <Action>(RenameElement)

""" File Keymap
map <leader><leader> <Action>(GotoFile)
map <leader>fr <Action>(RecentFiles)
map <leader>fn <Action>(Kotlin.NewFile)

""" Debug Keymap
map <leader>dD <Action>(RunConfiguration)
map <leader>db <Action>(ToggleLineBreakpoint)
map <leader>dc <Action>(Resume)
map <leader>dd <Action>(Debug)
map <leader>dr <Action>(Run)
map <leader>dx <Action>(Stop)
map <leader>du <Action>(ActivateDebugToolWindow)

""" Git Keymap
map <leader>gg <Action>(ActivateVersionControlToolWindow)
map <leader>gs <Action>(ActivateCommitToolWindow)
map <leader>gb <Action>(Annotate)

""" Search
map <leader>ss <Action>(GotoSymbol)
map <leader>sj <Action>(FileStructurePopup)

""" UI
map <leader>ue <Action>(ActivateProjectToolWindow)
map <leader>ug <Action>(ActivateGradleToolWindow)
map <leader>un <Action>(ActivateNotificationsToolWindow)
map <leader>us <Action>(ActivateStructureToolWindow)
map <leader>up <Action>(TogglePresentationMode)
map <leader>uz <Action>(ToggleDistractionFreeMode)

""" Window Keymap
map <leader>wm <Action>(HideAllWindows)
map <leader>ws <Action>(SplitHorizontally)
map <leader>wv <Action>(SplitVertically)
map <leader>wr <Action>(ChangeSplitOrientation)
map <leader>wL <Action>(MoveTabRight)
map <leader>wH <Action>(MoveEditorToOppositeTabGroup)
map <leader>wJ <Action>(MoveTabDown)
map <leader>ww <Action>(Switcher)
""" map <leader>e <Action>(SelectInProjectView)

""" Error Keymap
map <leader>en <Action>(GotoNextError)
map <leader>ep <Action>(GotoPreviousError)
map <leader>xn <Action>(GotoNextError)
map <leader>xp <Action>(GotoPreviousError)
map <leader>xx <Action>(ActivateProblemsViewToolWindow)

""" NERDTree Keymap
map <leader>fe :NERDTreeToggle<CR>

""" DBNavigator Keymap
map <leader>ud <Action>(DBNavigator.Actions.MainMenu.DatabaseBrowser)
map <leader>DD <Action>(DBNavigator.Actions.MainMenu.OpenSQLConsole)

""" Toggler
map <leader>ii <Action>(ToggleActionReverse)

""" Other Keymap
map <leader>: <Action>(tasks.and.contexts)
map <tab> <Action>(BraceOrQuoteOut)

map gI <Action>(GotoImplementation)
map gr <Action>(GotoReference)
map gu <Action>(ShowUsages)
map <leader>su <Action>(FindUsages)

map ]g <Action>(JumpToNextChange)
map [g <Action>(JumpToLastChange)
